{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/json","date":"Tue, 19 Nov 2024 04:05:23 GMT","keep-alive":"timeout=5","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Url"},"body":"[{"id":"1gu9n9a","title":"Founders who bootstrapped and have families- how'd you do it?","score":46,"content":"I'm a Mom who works a 9-5 and is a CEO for my side business while also building our MVP. I'm burnt out again, and I wish I could work on my company 100% of the time, but obviously can't. Don't know anyone rich enough to invest. Grants are not a practical path for us. Absolutely will not take out a loan against my mortgage (yikes). Can't stay up till 1 am every night and still show up for my job and my family. My co-founder and I are running this the smartest way possible, but it's just exhausting. \n\nI'm curious how others had found/are finding balance? How long did you bootstrap before you could quit your 9-5? When did you find time to run your business? \n\nI would love to hear any advice from those who are living this or have been through to the other side (able to work FT on their business). Thanks! ","url":"https://www.reddit.com/r/startups/comments/1gu9n9a/founders_who_bootstrapped_and_have_families_howd/","created_utc":1731949552,"num_comments":64},{"id":"1gtzri9","title":"Co-Founder Conflict and Missed Targets in Our Startup:  What Should I Do ?\n","score":17,"content":"I am the co-founder of a ticketing platform (SaaS & marketplace) based in Africa. My CTO and I started this journey in 2022, aiming to solve a major market problem in the events industry in Africa. Our vision was clear: create a platform that simplifies ticketing and access control while offering an accessible marketplace for event organizers and attendees. Initially, I approached him to hire him for system development, but he proposed we partner instead. Believing in his technical expertise and passion for the vision, I agreed, and we started the business with a shareholding structure of 65% (me) and 35% (CTO).\n\nAt the start, we shared a mutual enthusiasm for the project, but over time, our visions for the business began to diverge. These differences have gradually led to conflicts regarding the goals, target market, and overall approach to running the business. Our business development efforts and system development processes have become completely disintegrated. What’s more, I’ve found myself increasingly excluded from the technical side of things. Despite my repeated efforts to be kept in the loop about development progress, my CTO continues to operate in isolation, leaving me in the dark.\n\nWhen we initially launched the partnership, we agreed to use the lean methodology. Our goal was to launch an MVP (Minimum Viable Product) within 2022 to quickly gather user feedback and iterate based on market needs. However, we only managed to release a basic system for managing access control and generating hardcopy tickets—and this didn’t happen until 2023. I felt this was an unnecessary delay, as the initial scope of work was straightforward.\n\nBy early 2024, my CTO admitted that the workload was overwhelming, and we decided to hire additional help. We brought on board one developer and an intern, thinking this would ease the burden and accelerate progress. We set a three-month target to release V1 of the platform, with clear priorities and a defined scope. However, my CTO continued to add features outside the agreed scope, causing significant delays. As of today, we have yet to launch anything meaningful. In total, this means we’ve failed to launch a functional product since 2022—a reality that is increasingly disheartening for me as a co-founder.\n\nTo make matters worse, my CTO frequently takes on side gigs, often working with the same developer we hired to help with our project ( They are all on salary ). While I understand the need for financial stability in a bootstrapped startup, this directly impacts our progress and focus. Missing deadlines has become the norm, and the lack of accountability has led to lost opportunities. Some of our existing clients have even begun moving to competitors because our offerings remain limited. This is incredibly frustrating, as I’ve made multiple attempts to address the issue by discussing how the lack of communication and missed deadlines affect the business. Unfortunately, these discussions haven’t brought about any meaningful changes.\n\nAdding to the challenge is the fact that we don’t have any formal agreements beyond the company incorporation documents. We never established detailed operational agreements or governance structures to guide decision-making or accountability. While this may have been fine in the beginning, it has now become a glaring issue as conflicts arise. Looking back, I take responsibility for not pushing harder to formalize regular meetings and progress reviews. Without these, it’s been difficult to align on priorities and address concerns effectively.\n\nWe are also operating from a rented flat, which serves as both our workplace and living space. This arrangement, paid for through company funds, initially seemed cost-effective but has contributed to blurring the lines between work and personal boundaries. It has also made it harder to separate professional disagreements from personal conflicts, further complicating the partnership.\n\nFor context, I’ve put everything into this business. From May 2022 until August 2024, I worked tirelessly—often 15-hour days without a single day off and without taking a salary. I only started drawing a salary in April 2024, but even then, I’ve kept it minimal to keep our expenses manageable. My motivation has always been the belief that we’re solving an important market problem, particularly in Africa’s events industry. However, as the time go by and progress remains stagnant, I’m starting to doubt whether we have the right team to execute this vision. I’m questioning whether it’s time to make some hard decisions for the sake of my own well-being and the future of the business.\n\nCurrently, I’m considering two options:\n\nOption 1: Fire My CTO\n\nOne option is to terminate my CTO’s involvement in the business. While this might seem like the most straightforward solution, it’s not without significant risks. My CTO has been the technical lead from the start, and his removal would likely create a power vacuum and disrupt the already fragile development process. Given that we’re a small team, losing him would set us back significantly in terms of product development. Additionally, firing him could escalate tensions and lead to legal disputes, albeit with differing shareholding percentages.\n\nOn the other hand, his continued involvement is hindering progress. His lack of accountability and focus is directly impacting our ability to meet targets and grow the business. If I were to replace him, I would need to find a technical lead who not only understands our current development status but also aligns with the vision of the business. This would take time and resources—both of which are already stretched thin. The question remains: would firing him ultimately save the business or push us further into chaos?\n\nOption 2: Let the Business Fail\n\nThe second option is to accept that we’re not the right team to execute this vision and allow the business to fail. This would involve letting the partnership dissolve naturally, either through mutual agreement or as a result of financial constraints. While this is not the outcome I want, it might be the most realistic one given the current circumstances. If the business were to collapse, I could take the lessons I’ve learned from this partnership and apply them to future projects. I’d also consider picking up the parts of the business that still have potential in the African market, such as the ticketing and access control systems.\n\nHowever, letting the business fail comes with its own set of challenges. We’ve already invested significant time, effort, and resources into this project. Walking away now would feel like giving up on something that has the potential to succeed with the right execution. It would also mean leaving behind the clients and partners who have placed their trust in us. Moreover, there’s the emotional toll of watching something I’ve poured my heart into come to an end.\n\nMy Current Reflection\n\nAs I reflect on these two options, I can’t help but feel a sense of failure. I started this journey with so much enthusiasm and belief in the impact we could make. For the first two years, I was highly motivated, working long hours without compensation because I believed in the vision. But now, that motivation is waning as the reality of our disorganization and lack of alignment becomes more apparent.\n\nI also recognize my own shortcomings in this situation. For instance, I should have pushed harder for formal agreements and regular meetings to ensure transparency and accountability. I also should have addressed the issue of side gigs earlier, as this has clearly impacted our ability to meet targets. While it’s easy to place blame on my CTO, I know that I share responsibility for some of the challenges we’re facing.\n\nAt this point, I’m seeking advice from those who have faced similar situations. What would you do in my position? Is it worth salvaging this partnership and trying to realign our efforts, or is it time to cut my losses and move on? Are there other options I haven’t considered that could help us get back on track?\n\nAny insights, advice, or shared experiences would be deeply appreciated as I navigate this difficult decision.","url":"https://www.reddit.com/r/startups/comments/1gtzri9/cofounder_conflict_and_missed_targets_in_our/","created_utc":1731916326,"num_comments":12},{"id":"1gu15xf","title":"Need Advice: How Can I Interview Senior Web Developer Candidates With Limited Technical Skills?","score":11,"content":"Hi everyone,\n\nI’m a startup founder with a growing business, but I have limited technical skills. We developed our website with freelancers but now we’re at the stage where we need to hire a full-time web developer with 2-3 years of experience to take our online platform to the next level. However, I’m struggling with how to conduct interviews effectively, given my lack of in-depth technical knowledge.\n\nI want to ensure that I’m assessing their technical expertise as well as their ability to align with our business goals and company culture.\n\n* What questions should I ask that go beyond surface-level knowledge?\n* Are there any specific strategies, tools, or frameworks I could use to evaluate their skills? I know tools like HackerRank exist, but we have over 200 job applicants applying for the role and making them all do coding tests would inflate the interview budget far too much.\n* Should I involve a third-party technical expert or consultant in the interview process? If yes, where do I find them and what kind of a budget am I looking at?\n* How can I identify red flags during the interview process when I don’t fully understand the technical jargon?\n\nAny advice, tips, or personal experiences you could share would be incredibly helpful. Thank you in advance for helping a non-technical founder navigate this hiring process!","url":"https://www.reddit.com/r/startups/comments/1gu15xf/need_advice_how_can_i_interview_senior_web/","created_utc":1731922919,"num_comments":24},{"id":"1gtx7vx","title":"[Hiring/Seeking/Offering] Jobs / Co-Founders Weekly Thread","score":10,"content":"# [Hiring/Seeking/Offering] Jobs / Co-Founders Weekly Thread\n\nThis is an experiment. We see there is a demand from the community to:\n\n* Find Co-Founders\n* Hiring / Seeking Jobs\n* Offering Your Skillset / Looking for Talent\n\n# Please use the following template:\n\n* \\*\\*\\[SEEKING / HIRING / OFFERING\\]\\*\\* (Choose one)\n* \\*\\*\\[COFOUNDER / JOB / OFFER\\]\\*\\* (Choose one)\n* Company Name: (Optional)\n* Pitch:\n* Preferred Contact Method(s):\n* Link: (Optional)\n\n## All Other Subreddit Rules Still Apply\n\nWe understand there will be mild self promotion involved with finding cofounders, recruiting and offering services. If you want to communicate via DM/Chat, put that as the Preferred Contact Method. We don't need to clutter the thread with lots of 'DM me' or 'Please DM' comments. Please make sure to follow all of the other rules, especially don't be rude.\n\n## Reminder: This is an experiment\n\nWe may or may not keep posting these. We are looking to improve them. If you have any feedback or suggestions, please share them with the mods via [ModMail](https://www.reddit.com/message/compose/?to=/r/startups).","url":"https://www.reddit.com/r/startups/comments/1gtx7vx/hiringseekingoffering_jobs_cofounders_weekly/","created_utc":1731906099,"num_comments":9},{"id":"1guiztr","title":"What’s the key to a successful MVP? Lessons from the trenches","score":7,"content":"Hey everyone!\n\nAfter working with several startups to bring their ideas to life, one thing has become clear: the process of building an MVP is never as straightforward as it seems. Every founder faces tough choices about what to prioritize, what to cut, and how to move fast without breaking everything.\n\nHere are a few lessons I’ve learned along the way that might help others here:\n\n1. Your MVP is not your final product. It’s a learning tool, designed to test assumptions and validate your idea. Treat it as an experiment, not a masterpiece.\n2. Less is more. The fewer features you include, the faster you can launch and the clearer your feedback will be.\n3. Time is everything. The longer you take to launch, the more you risk missing opportunities or burning resources.\n\nI’m curious—what’s been your biggest challenge when building an MVP? Let’s share some war stories and lessons learned!","url":"https://www.reddit.com/r/startups/comments/1guiztr/whats_the_key_to_a_successful_mvp_lessons_from/","created_utc":1731972735,"num_comments":2},{"id":"1gua4qr","title":"If it’s a COMMON MISTAKE, how do you avoid it?","score":8,"content":"We all know that some mistakes are common, especially when starting or running a business. What are your strategies for identifying and avoiding these common pitfalls? \n\nWhether it's hiring the wrong people, mismanaging finances, or overlooking market research, I’d love to hear how you stay vigilant and proactive in dodging these mistakes.","url":"https://www.reddit.com/r/startups/comments/1gua4qr/if_its_a_common_mistake_how_do_you_avoid_it/","created_utc":1731950709,"num_comments":9},{"id":"1gugfgj","title":"Chicago startup scene events","score":5,"content":"\nI led product for a venture studio from 0 to a mid 8-figure exit in San Diego, but then moved to IL a few years ago. \n\nI love it here but I need to do a better job networking. \n\nCan anyone in Chicago startup or tech world recommend good meetups or events?\n\n","url":"https://www.reddit.com/r/startups/comments/1gugfgj/chicago_startup_scene_events/","created_utc":1731966154,"num_comments":1},{"id":"1gubsvq","title":"Things everyone lack in startup journey","score":4,"content":"Hello. I have been in the startup environment for almost 3 years - I work as software engineer at startup. \n\nI am trying to identify what are the biggest problems for founders, in their day-to-day operations? What do you struggle the most with? I have seen a lot of people struggle with proper landing page, branding, SEO setup, marketing, users acquisition, MVP creation, however I want to find out that from you, if you would like to share your experiences.\n\n  \nThank you in advance and good luck in your journey!","url":"https://www.reddit.com/r/startups/comments/1gubsvq/things_everyone_lack_in_startup_journey/","created_utc":1731954759,"num_comments":18},{"id":"1guh2l1","title":"thoughts about starting up in a competitive niche?","score":3,"content":"I'm an engineering student working on an AI startup (ofc lol, who isn't nowadays). We're working in a semi-competitive area (it's not AI generated websites, or AI powered IDEs or document analysis software) - there are a few great alternatives to our product but we seem to have found our niche and a combination of features that users can't really find elsewhere. We're ready with an MVP and will be doing a public launch very soon. \n\nMy team and I are still pretty young - we're a bunch of 20 year olds and we've been running this startup for about a year now. \n\nIs it a good thing to have a lot of competition in your niche? If yes/no, why? How can we leverage competition to our advantage? \n\nAlso how can baby startups survive in competitive niches? Are there any general strategies you guys use to find out gaps in your competitors products that you can bridge? \n\nThanks!","url":"https://www.reddit.com/r/startups/comments/1guh2l1/thoughts_about_starting_up_in_a_competitive_niche/","created_utc":1731967727,"num_comments":5},{"id":"1gu4t2b","title":"Setting up an Inc as holding co. with GmbH (german) as an operating company ","score":3,"content":"Hi all, \n\nI tried looking for advice on this and got contrasting answers from multiple lawyers in Germany.  Basically I have pre-seed interest from US citizens and I want to make it easier for them to invest.  But for US citizens to invest directly into a GmbH is not so trivial.  So I wanted to have an Inc in the US and GmbH here in Germany for operations (I'm a German citizen living in Germany).\n\n  \nBut turns out it's not possible to have a setup like this according to some lawyers, on the other hand I have heard companies do this.  Would be very grateful if someone has this kind of setup working can give some advice.","url":"https://www.reddit.com/r/startups/comments/1gu4t2b/setting_up_an_inc_as_holding_co_with_gmbh_german/","created_utc":1731936880,"num_comments":4},{"id":"1gugeup","title":"Is there scope of innovation in the search and retrieval market? What will knowledge management look like in 15 years?","score":2,"content":"I'm a CS student at Georgia Tech with a few years of startup experience. I’ve been exploring search, both from a startup and research point of view, and recently built a hackathon project doing semantic search on Google Drive and Gmail (encrypts your data and queries GPT-4).\n\nThe project won honorable mention from Google, but then I discovered that you can search through your entire Google Workspace through Gemini, but no one is actually using/raving about it? So is streamlined search an actual problem or not?\n\nI see a big vision for search generally - in streamlining workflows and making information access contextual/seamless. There's a lot of existing tools out there (Glean, Unleash, etc.) and want to know what the scope of differentiation here is.","url":"https://www.reddit.com/r/startups/comments/1gugeup/is_there_scope_of_innovation_in_the_search_and/","created_utc":1731966112,"num_comments":2},{"id":"1gu3btz","title":"Equity options at a startup with no other compensation","score":2,"content":"Hey everyone,\n\nFirst-timer college student here looking for your advice!\n\nI got a job offer at a startup so far consisting of 7 people including the 3 founders, most of them are still college students or just graduated, they have one co-founder with a master's in business. \nThey started almost a year ago and have a couple of clients already but no liquidity. It’s a B2B software business and they want to hire me as one of the leads for the development of a new product.\nSo far I have been working with them for a month now to see how it goes. During this time I offered my experience and advice in crucial DevOps decisions that they were very in need of and started outlining the new project.\n\nNow it comes the time when we finally write  up a contract and here’s the deal: They can’t offer money as compensation (at least not from them) as they have no liquidity. (Nobody else at the company is getting paid atm and the founders are still investing in the company.)\n\nCurrently, I’m being offered a 0-hour contract with government financial support that you receive if you work in the Netherlands, two subscriptions that I need to work, an office space, a fancy title, and the “right of pre-emption for any funding rounds or distribution of equity”.\n\nSince I’m risking enough by agreeing to something with no compensation I’d like to get something out of it if everything goes well.\n\nSo I would like to ask your advice on what kind of better equity options can I negotiate according to the circumstances. \n\nThank you!","url":"https://www.reddit.com/r/startups/comments/1gu3btz/equity_options_at_a_startup_with_no_other/","created_utc":1731932012,"num_comments":5},{"id":"1gukuuk","title":"Focus on the problem, not the solution\n","score":4,"content":"One of the biggest misconceptions that I’ve seen with founders on their pitches is around focusing on the problem vs. the solution.\n\nEspecially with the advent of GenAI, I started to notice that 8/10 pitches mentioned a lot more about the solution than the problem. \n\nI would hear from founders how AI would be used to do these cool things, but there was very little talk about how it was solving the actual problem in depth - it became a bad habit.\n\nSide note: AI fatigue is real.\n\nThe best pitches I’ve seen are the ones that can strike a good balance between both, but they’re also the ones that have a higher probability of long-term success. \n\nLet’s talk about a few reasons why this is so important…\n\n—\n\nSolutions (i.e. the product) change at a faster rate than the problem - you’re building, testing, and iterating much more quickly. This is because of customer feedback and new insights along your product journey. It’s not unnatural to pivot multiple times.\n\nThe \\*problem\\* however is much more rigid, and less likely to change (but there are exceptions!)\n\nIdeally, the natural path to take is to identify a core problem, and then find a solution around it. What you don’t want to do is the reverse. \n\nI’ve seen examples of founders trying to mold a problem to fit their solution. \n\nYou can end up building something irrelevant consuming huge amounts of time, money, and resources into solving a particular problem that should have never existed. \n\nBut how do you know when a problem needs fixing? \n\nThat’s when it becomes unique to the founder. Those who are obsessed with the problem are usually the ones who can go the furthest. \n\nThe problem needs to bother you A LOT. \n\nIt’s when obsession takes over.\n\nIt needs to get under your skin and create discomfort for you to the point where you can’t get it off your mind. \n\nThe great thing about this approach is that this type of relentlessness will take you down a rabbit hole you actually want to go down. \n\nIf the problem matters to you enough, eventually you become fully immersed and relentless in understanding \\*why\\* the problem exists and matters to you.\n\nIt means that the best problems to solve are also the ones worth solving but hidden in plain sight.\n\nThe plus side is that those who stay problem-focused unlock insights that their competitors miss.\n\nBut problems that could be solved don’t exist in a vacuum - it needs a solution. \n\nSo going back to the pitches:\n\nAs mentioned previously, the most memorable pitches are the ones that can do the balancing act between problem and solution, but they also tell a great story about the problem and why it needs addressing.\n\nThey then use the problem as a segue into their solution.\n\nBut in many cases, the solution itself can convey a ‘set-in-stone’ perspective of what the company is (or will be) doing. \n\nHowever, this couldn’t be further from the truth.\n\nThe solution presented in the deck could change a number of times. \n\nThe reality is that it’s not about having THE solution, but it’s having A solution, especially at such an early stage.\n\nAny thoughtful solution to a worthwhile problem is worth building. \n\nThe goal is to get your initial solution in the hands of your ideal customer as quickly as possible and iterate from there.\n\nIt’s about finding what works and if the solution is truly addressing the problem you’re trying to solve.\n\nYou’re not going to get it right the first time, so it’s best to build early and deploy fast.\n\nOver time, you’ll refine the solution and have a much better understanding of the problem. This will then feed back into the investment deck, and all the branding and marketing materials that come with it.\n\nUltimately, the companies and brands that have longevity are the ones who are completely locked into the problem they want to solve. They understand the problem intimately, better than anyone else, and also have the capabilities to solve it.","url":"https://www.reddit.com/r/startups/comments/1gukuuk/focus_on_the_problem_not_the_solution/","created_utc":1731977845,"num_comments":1},{"id":"1guj8hq","title":"A new dating app","score":1,"content":"Hi everyone,\n\nI’m a new but also an experienced entrepreneur. I co-founded a software company before graduating from university, and we ran the business for almost 10 years. While we made some money, it wasn’t worth the effort in the long run, so I decided to leave and started working a 9-to-5 job.\n\nAbout 1.5 years ago, I decided to create a mobile app aimed at organizing group meetups instead of one-on-one dating.\n\nNow, we’re almost ready to launch, with plans to go live in January. In the meantime, we’re looking for some investment to spend on marketing.\n\nHere’s my question: everyone we’ve spoken to says that dating and meeting apps are some of the hardest to succeed with due to the challenges of user acquisition. However, when I look at our idea, there’s only one similar app on the market and that’s making money. Plus, our app offers more features than theirs, and I genuinely believe in our product.\n\nI’m reaching out to ask if anyone here has experience building a dating or meeting app. Could you share any insights, both good and bad? I’d really appreciate hearing about your experiences as a builder in this space.\n\nThanks in advance!","url":"https://www.reddit.com/r/startups/comments/1guj8hq/a_new_dating_app/","created_utc":1731973381,"num_comments":1},{"id":"1gugq9h","title":"Target Audience ","score":1,"content":"I have an idea for an app and want to be sure I do my research and data collection before dumping all my time and money into the early stages. Based on your experiences, what is the best way to find your target audience? I have used a survey to gather data but only gotten a small percentage of people to take it. Other suggestions? ","url":"https://www.reddit.com/r/startups/comments/1gugq9h/target_audience/","created_utc":1731966890,"num_comments":2},{"id":"1gudv3n","title":"Are These CPC Estimates Accurate for a Travel Newsletter/Blog/Platform?","score":1,"content":"Hi everyone!\n\nI’m in the process of validating a US travel-focused platform (non AI related), and I’d love to get your insights on estimating ad costs. The platform is a free website that combines elements of a blog, newsletter, and curated travel guides for things to do in specific locations. Right now, I’m focused on affiliate marketing to generate revenue, and my goal is to drive initial traffic to the site to test its viability.\n\nI’ve researched CPC estimates for running ads via GPT, Claude, and a web search, and here’s what I’ve come up with for a starting point, but I'm not sure where I would land in these CPC's:\n\n|**Platform**|**Low CPC**|**Average CPC**|**High CPC**|**Notes**|\n|:-|:-|:-|:-|:-|\n|**Facebook**|$0.30|$0.80|$2.00|Lower costs for broad targeting, higher for specific travel intent.|\n|**Instagram**|$0.40|$1.20|$3.00|Higher engagement but generally more expensive than Facebook.|\n|**YouTube**|$0.10|$0.30|$4.00|Video views can be cheap, but travel-related clicks can cost more.|\n|**Pinterest**|$0.10|$0.70|$1.50|Great for travel inspiration with relatively low competition.|\n|**Google Ads**|$0.50|$2.50|$5.00+|Travel is competitive, especially for popular destinations like Las Vegas.|\n|**Twitter (X)**|$0.20|$0.80|$2.50|Less travel-focused but good for real-time promotions.|\n\nDoes this align with what others have experienced when running ads for travel-related content, Newsletters or affiliate-based platforms? Are there any platforms you’d suggest that might be under-utilized or offer lower CPCs for this niche?\n\nSome context:\n\n* We want to target induvial in or going to a specific undetermined US location.\n* My budget is modest since I’m in the validation phase.\n\nAlso, if there are any tips for keeping costs low while driving targeted traffic, I’d love to hear them! Thanks so much for your help.","url":"https://www.reddit.com/r/startups/comments/1gudv3n/are_these_cpc_estimates_accurate_for_a_travel/","created_utc":1731959771,"num_comments":2},{"id":"1guba5q","title":"I need help deciding a business name and branding colors.","score":1,"content":"I am currently working on starting an event planning business and I need assistance with deciding what brand name and brand colors to choose. My current niche/target audience consists of birthday parties (ages 1-10), baby showers, and gender reveals. The ultimate goal is to produce funding to open a venue in the future.\n\nAnways, both the brand name and colors need to align with the current focus on children’s parties, baby showers, and gender reveals while also accommodating the eventual expansion to hosting a broader range of events in the possible venue.\n\nHere are the names:\n- Milestone Collective\n- Pure Bliss Celebrations\n- Timeless Occasions\n- Canvas & Confetti\n\nHere are the colors (The colors chosen should correlate to the brand name chosen):\n- Blue, Yellow (or gold), White\n- Emerald Green, Gold, White\n- Red, White, Black\n\nThanks in advance. If there are any recommendations, tips, or any alternatives suggested, I would love to hear them.\n\n\n","url":"https://www.reddit.com/r/startups/comments/1guba5q/i_need_help_deciding_a_business_name_and_branding/","created_utc":1731953497,"num_comments":5},{"id":"1gu95fy","title":"Mentor business help","score":0,"content":"I posted this in another subreddit. Just trying to get all the advice I can get. I have a mentoring business where I mentor aspiring entrepreneurs on how to become an entrepreneur and how to validate their ideas and write a business plan. My business is set up to be a community centered around the cohort-style program I offer. \n\nI have resources and tools I’ll provide. I plan to launch my first cohort of 2025 on January 6th. This would be my first cohort not backed by an organization and I’m having a hard time marketing my business (an area I struggle so badly with. It’s not that I’m not knowledgeable in the area it’s just when it comes to executing my marketing strategies I am having a very hard time.) I was planning on offer free workshops and webinars to attract leads and even offer free guide/ebook. \n\nI guess my question here is, how can I prepare and market for the new cohort? ","url":"https://www.reddit.com/r/startups/comments/1gu95fy/mentor_business_help/","created_utc":1731948369,"num_comments":4},{"id":"1gtytu9","title":"87.7% of entrepreneurs struggle with at least one mental health issue","score":0,"content":"Hey,\n\nI was procrastinating a little bit, looking at random posts on reddit and articles on google and I came across this thing on a website called Founder Reports. Now I don't get shocked easily because I know that we have a mental health crisis going on that no one really talks about but 87,7% is just too much IMO. \n\nI wonder why isn't anyone talking about this? And if they are it's not enough. Imagine you sat 10 people in a room and 9 of them had a mental health problem going on. That would be quite concerning. \n\nThe thing with us entrepreneurs is, we don't really care about anything else but success, whatever it may be. And we are willing to risk it all, even at the expense of our mental health. But what happens if you don't make it and it gets worse I ask myself? What then? Do we just \"thug\" it out? Do we tell someone? Oh, but what if they don't understand us? It's normal for entrepreneurs to try and figure things out by themselves but what If they can't? What then? Is there a light at the end of the tunnel for all of us or are some destined for misery their whole life? This is a really shocking statistic and a huge problem in our circle. I'm lucky and have friends who are also entrepreneurs and we can talk about our struggles (business and mental), but many people don't.\n\nI think the bigger issue is that we’ve normalized suffering as part of the entrepreneurial journey. \"Hustle culture\" tells us to work harder, sleep less, and figure it all out on our own. But at what cost? If 87.7% of us are struggling with mental health issues, then clearly, something is broken. We’re told to be resilient, but resilience shouldn’t mean ignoring our well-being...\n\nWhat’s worse is that many of us don’t have a support system in place. Like I said, some entrepreneurs are lucky enough to have friends who get it, but what about the ones who don’t? Who do they talk to when the stress becomes unbearable? And how do they even bring it up without feeling like they’re admitting failure?\n\nI don’t have all the answers, but I think we need to talk about this more. We need safe spaces where founders can openly share their struggles without judgment. Maybe it’s an online community, a meetup, or even just a buddy system where you check in with someone who understands what you’re going through.\n\nWhat do you guys think? Is there something that has helped you manage the mental toll of being an entrepreneur and running your own business? Or are you just pushing through, hoping it gets better? Let’s have an honest conversation about this because 87.7% is way too high, and we need to do better—not just for ourselves, but for the people who depend on us.","url":"https://www.reddit.com/r/startups/comments/1gtytu9/877_of_entrepreneurs_struggle_with_at_least_one/","created_utc":1731912214,"num_comments":7},{"id":"1gue7sf","title":"How I'm losing 50k a month & considering funding","score":0,"content":"Hi everyone,\n\nThis will be a longer read, but I genuinely believe you’ll get a lesson or two out of it.\n\nFirst off, I want to clarify that this post isn’t intended as an advertisement. If it does come off that way, I assure you that’s not my intention and I apologise for it. We’re just trying to share our journey, insights, and some of the successes we've achieved so far. We’re actually not interested in taking on any additional clients right this second, which is why I’m not including our agency name or specific details about how to contact us.\n\nBefore I dive into the details, everything I’m about to share is based on actual results, client feedback, and hard-won experience. If you have questions or want more insight, feel free to reach out — I’m more than happy to chat and share details that could help.\n\nLet’s dive in.\n\nWe run a lead generation agency focused on management agencies within a pretty unique field (rhymes with Only Sans). The industry itself isn’t widely discussed (morality debates are common), but it’s incredibly active. We operate differently from most service providers because we prioritize long-term value and genuine results over quick wins. With backgrounds in high-ticket sales, cold outreach, and lead generation, we’ve built systems that produce results few others in this space can offer.\n\n**Operations and Services**\n\nIt’s been exactly a year since we launched, and in that time, we’ve had the chance to work with some of the more established agencies in the industry. By networking at conferences, participating in Q&A sessions, and building relationships with experts, we’ve established a reputation as a reliable partner in this space.\n\nOur approach is straightforward: we use Instagram to source, find, and connect with creators. By focusing exclusively on creators from first-world countries who already have a proven track record, we’re able to provide quality that typical marketplaces often don’t. Our goal is consistency and reliability; if a creator doesn’t work out, we provide a replacement to keep our clients covered. This has been key in helping us stand out in a crowded market.\n\nGenerally, our payment structure is designed to be flexible based on each client’s needs. We charge a base rate that scales with the number and type of creators the client requires, with custom packages available if they have specific niche or demographic preferences. This setup allows us to offer both straightforward solutions and tailored deals to meet diverse client needs while maintaining quality and reliability in the leads we deliver.\n\n**Additional Services**\n\nOne thing we’ve learned is that adding complementary services has strengthened our client relationships. For example, if a client’s Instagram profile isn’t up to scratch, we offer rebranding support, which around 90% of clients take us up on. This additional service keeps clients engaged and reinforces our reputation for going above and beyond.\n\n**How We’re Different from Marketplaces**\n\nMarketplaces are technically our competition, but we’ve chosen a different approach. Most marketplaces rely on creators from lower-income countries, which often leads to issues around language barriers, commitment, and reliability. Once any initial guarantee ends, these creators may leave, creating a new set of challenges for agencies. Our focus is on creators who already speak fluent English, have a track record, and meet specific standards for quality and professionalism. Rather than signing on anyone, we make sure creators are a solid match for both our standards and the needs of our clients.\n\nInterestingly, some marketplaces have approached us to partner, offering to sell our creators through their platforms in exchange for a commission. We decided against it, as it would dilute the exclusivity and reputation we’ve built. Instead, we recently found a way to partner through a white-label model, which allows us to expand our reach without compromising our brand or standards.\n\nIn a shape or form - we're running a monopoly.\n\n**Growth and Challenges**\n\nWe’ve built a community of over 800 agencies on Telegram in just a year, which has been invaluable for growth. But here’s the kicker: it’s only the two of us. My co-founder and I handle every single part of the operation — from marketing to client communications, sourcing leads, and fulfilling orders. It’s a heavy load, and while we’re no strangers to hard work, we know our time could be better spent if we had more systems in place. Right now, we’re turning away clients because we simply don’t have enough hours in the day.\n\nDespite this, we’ve managed to generate over six figures in our first year, and we’re proud of it. However, we know we’re missing out on even more substantial growth — potentially an additional $50k/month — simply because we’re operating at maximum capacity.\n\n**Our Scaling Goals**\n\nThe field we’re in isn’t easy, and it’s filled with companies that don’t always operate with the best practices. Our commitment to honest, reliable service has allowed us to build a strong client base. That said, we’re currently facing some financial challenges, partially due to the mistake of mixing personal and business finances early on. Not to mention, we’re handling everything from A to Z (client communication, lead sourcing/closing, marketing, etc.), which is extremely time-consuming. With capital, we’d be able to delegate most of the tasks, and the two of us could start prioritizing actual growth. This is why we’re seriously considering funding, to help us stabilize and make strategic moves for long-term growth.\n\nWe have a solid scaling plan that could allow us to reach $50k/month in revenue at minimum, mostly by expanding our Instagram outreach (running multiple accounts, each representing a creator). But we’d need support to set up the necessary systems to automate and scale efficiently.\n\n**What We’re Looking For**\n\nWe’re at a point where we’re considering funding options to help us level up, we'd be open to give up equity for it. Has anyone here been in a similar position? If you’ve navigated scaling a small team or managed exponential growth in a service-based startup, we’d love to hear about your experience. We’re even open to discussing equity if it makes sense for the right partner.\n\nAny insights from fellow founders would be really appreciated. Thanks for reading, and feel free to reach out if you’d like to discuss or share advice!\n\n","url":"https://www.reddit.com/r/startups/comments/1gue7sf/how_im_losing_50k_a_month_considering_funding/","created_utc":1731960635,"num_comments":1},{"id":"1gukatb","title":"Selling my app idea, do I need to have a functionnal mvp?","score":0,"content":"I'm building this app which will (I hope) be sold to outdoor sport centers and have been working on my concept for a couple of months. I have a a complete mock of the app, meaning the ui is pretty much all designed in figma, and am now developping the app while I still have my full time job. I have this contact which works as a volunteer in a regional park to whom I pitched my idea and he seemed to like it alot. He offered me to schedule a meeting with the park management comitee when the time came for me to hopefully be my first clients.\n\nMy question is, should I start to put my efforts into validating my concept and the interest of my potential clients by pitchin/selling them my concept right away using my ui mocks (nothing functionnal) or should I finish the mvp before doing that?\n\nTLDR; Is it ok to pitch your app/product to potential clients using mockups only and no actual functionning MVP? \n\nEdit: Not selling the idea, selling the concept to clients so that they adopt my app in their business model","url":"https://www.reddit.com/r/startups/comments/1gukatb/selling_my_app_idea_do_i_need_to_have_a/","created_utc":1731976256,"num_comments":20},{"id":"1gu7yrb","title":"Created an AI tool which automatically creates a todo list and updates from your emails, need help with expanding user base to more than 2 lol.","score":0,"content":"I have created this after seeing how effective these simple things, I have two people who are currently using it and they seem to like it, although time will tell. What is now the best way to look for other users? I have contacted some of my university professors and tried promoting on here, but I am sure there must be better ways? Ideally I would try and speak to people in person about it but I am not sure where to begin with this approach?\n\n  \nAny help?\n\n  \nThis is not a promotion just looking for advice, thanks.","url":"https://www.reddit.com/r/startups/comments/1gu7yrb/created_an_ai_tool_which_automatically_creates_a/","created_utc":1731945452,"num_comments":7},{"id":"1gtyims","title":"How to create a product & mission statement that will align with democrats and republicans?\n","score":0,"content":"I'm in the stage of creating MVP.  \nAnd I have thought about: if there are ppl who hate Tesla/Elon Musk. Avoid buying an EV from him just because they have personal negative views about him. Therefore choosing competitors.\n\nHow to have a mission statement that will have support from both cams of buyers?  \n\\- to be 100% capitalist rough and efficient  \n\\- and on the other side what do democrats need from a company mission to get the support for the brand/buyers behavior?  \ndiversity? 1% for the planet? What else?","url":"https://www.reddit.com/r/startups/comments/1gtyims/how_to_create_a_product_mission_statement_that/","created_utc":1731910892,"num_comments":3},{"id":"1gu41ce","title":"Some prominent habits of PMs I have worked with across my career till now…","score":0,"content":"\n➡️ PM 1: Used to always discuss complex projects and problem statements with a fellow PM who was a friend, to be sure about alternate perspectives.\n\n➡️ PM 2: Used to always ask counter questions on feature requests or priority alignments. User interviews with him never felt agenda driven, rather a natural conversation with customers. \n\n➡️ PM 3: Never took accountability head on. Somehow for every task he used to direct accountability towards his stakeholders.\n\n➡️ PM 4: Great at research, but always expected devs to take on the items without deeper questioning because he said so (slight superiority complex). \n\n➡️ PM 5: Minimal emotional polarisation, used to always approach problems with an open view, that greatly helped in managing stakeholders. ","url":"https://www.reddit.com/r/startups/comments/1gu41ce/some_prominent_habits_of_pms_i_have_worked_with/","created_utc":1731934484,"num_comments":1}]","status":200,"url":"http://localhost:3000/api/subreddits/startups/posts"},"revalidate":31536000,"tags":[]}