{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-type":"application/json","date":"Tue, 19 Nov 2024 00:05:24 GMT","keep-alive":"timeout=5","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Url"},"body":"","status":200,"url":"http://localhost:3000/api/subreddits/dataengineering/posts"},"revalidate":31536000,"tags":[]}