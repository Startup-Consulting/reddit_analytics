"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/subreddits/page",{

/***/ "(app-pages-browser)/./components/subreddit-list.tsx":
/*!***************************************!*\
  !*** ./components/subreddit-list.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SubredditList: function() { return /* binding */ SubredditList; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_subreddit_card__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/subreddit-card */ \"(app-pages-browser)/./components/subreddit-card.tsx\");\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ui/button */ \"(app-pages-browser)/./components/ui/button.tsx\");\n/* harmony import */ var _barrel_optimize_names_Plus_lucide_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=Plus!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/plus.js\");\n/* harmony import */ var _components_add_subreddit_modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/add-subreddit-modal */ \"(app-pages-browser)/./components/add-subreddit-modal.tsx\");\n/* harmony import */ var _components_ui_use_toast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/ui/use-toast */ \"(app-pages-browser)/./components/ui/use-toast.ts\");\n/* __next_internal_client_entry_do_not_use__ SubredditList auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction SubredditList() {\n    _s();\n    const [isModalOpen, setIsModalOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [subreddits, setSubreddits] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const { toast } = (0,_components_ui_use_toast__WEBPACK_IMPORTED_MODULE_5__.useToast)();\n    // Load user's subreddits\n    const fetchUserSubreddits = async ()=>{\n        try {\n            setIsLoading(true);\n            const response = await fetch(\"/api/subreddits\");\n            if (!response.ok) {\n                const error = await response.json();\n                throw new Error(error.error || \"Failed to fetch subreddits\");\n            }\n            const data = await response.json();\n            console.log(\"Fetched subreddits:\", data) // Debug log\n            ;\n            setSubreddits(data);\n        } catch (error) {\n            console.error(\"Error fetching subreddits:\", error);\n            toast({\n                title: \"Error\",\n                description: error instanceof Error ? error.message : \"Failed to load your subreddits\",\n                variant: \"destructive\"\n            });\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Initial load of subreddits\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchUserSubreddits();\n    }, []);\n    const handleAddSubreddit = async (subredditName)=>{\n        try {\n            setIsLoading(true);\n            const response = await fetch(\"/api/subreddits\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    subredditName\n                })\n            });\n            if (!response.ok) {\n                const error = await response.json();\n                throw new Error(error.error || \"Failed to add subreddit\");\n            }\n            const newSubreddit = await response.json();\n            console.log(\"Added subreddit:\", newSubreddit) // Debug log\n            ;\n            setSubreddits((prev)=>[\n                    ...prev,\n                    newSubreddit\n                ]);\n            toast({\n                title: \"Success\",\n                description: \"Added r/\".concat(subredditName, \" to your list\")\n            });\n            return newSubreddit;\n        } catch (error) {\n            console.error(\"Error adding subreddit:\", error);\n            const errorMessage = error instanceof Error ? error.message : \"Failed to add r/\".concat(subredditName);\n            toast({\n                title: \"Error\",\n                description: errorMessage,\n                variant: \"destructive\"\n            });\n            throw error;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const handleRemoveSubreddit = async (subredditName)=>{\n        try {\n            setIsLoading(true);\n            const response = await fetch(\"/api/subreddits\", {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    subredditName\n                })\n            });\n            if (!response.ok) {\n                const error = await response.json();\n                throw new Error(error.error || \"Failed to remove subreddit\");\n            }\n            setSubreddits((prev)=>prev.filter((s)=>s.name !== subredditName));\n            toast({\n                title: \"Success\",\n                description: \"Removed r/\".concat(subredditName, \" from your list\")\n            });\n        } catch (error) {\n            console.error(\"Error removing subreddit:\", error);\n            toast({\n                title: \"Error\",\n                description: error instanceof Error ? error.message : \"Failed to remove subreddit\",\n                variant: \"destructive\"\n            });\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            isLoading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n                children: [\n                    1,\n                    2,\n                    3\n                ].map((i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"h-48 bg-gray-100 rounded-lg animate-pulse\"\n                    }, i, false, {\n                        fileName: \"/Users/jaeheesong/python/reddit-analytics/components/subreddit-list.tsx\",\n                        lineNumber: 128,\n                        columnNumber: 13\n                    }, this))\n            }, void 0, false, {\n                fileName: \"/Users/jaeheesong/python/reddit-analytics/components/subreddit-list.tsx\",\n                lineNumber: 126,\n                columnNumber: 9\n            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n                children: [\n                    subreddits.map((subreddit)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_subreddit_card__WEBPACK_IMPORTED_MODULE_2__.SubredditCard, {\n                            subreddit: subreddit,\n                            onRemove: ()=>handleRemoveSubreddit(subreddit.name)\n                        }, subreddit.name, false, {\n                            fileName: \"/Users/jaeheesong/python/reddit-analytics/components/subreddit-list.tsx\",\n                            lineNumber: 134,\n                            columnNumber: 13\n                        }, this)),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center justify-center border-2 border-dashed border-gray-300 rounded-lg p-6 hover:border-gray-400 transition-colors\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                            onClick: ()=>setIsModalOpen(true),\n                            variant: \"outline\",\n                            className: \"flex items-center gap-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Plus_lucide_react__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                    className: \"w-4 h-4\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/jaeheesong/python/reddit-analytics/components/subreddit-list.tsx\",\n                                    lineNumber: 146,\n                                    columnNumber: 15\n                                }, this),\n                                \"Add Subreddit\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/jaeheesong/python/reddit-analytics/components/subreddit-list.tsx\",\n                            lineNumber: 141,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/jaeheesong/python/reddit-analytics/components/subreddit-list.tsx\",\n                        lineNumber: 140,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/jaeheesong/python/reddit-analytics/components/subreddit-list.tsx\",\n                lineNumber: 132,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_add_subreddit_modal__WEBPACK_IMPORTED_MODULE_4__.AddSubredditModal, {\n                isOpen: isModalOpen,\n                onClose: ()=>setIsModalOpen(false),\n                onAdd: handleAddSubreddit\n            }, void 0, false, {\n                fileName: \"/Users/jaeheesong/python/reddit-analytics/components/subreddit-list.tsx\",\n                lineNumber: 153,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/jaeheesong/python/reddit-analytics/components/subreddit-list.tsx\",\n        lineNumber: 124,\n        columnNumber: 5\n    }, this);\n}\n_s(SubredditList, \"LF/SoC4Wyss4TUjWnXfwdvXz4Eg=\", false, function() {\n    return [\n        _components_ui_use_toast__WEBPACK_IMPORTED_MODULE_5__.useToast\n    ];\n});\n_c = SubredditList;\nvar _c;\n$RefreshReg$(_c, \"SubredditList\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/subreddit-list.tsx\n"));

/***/ })

});